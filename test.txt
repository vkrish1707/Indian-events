import React, { useState } from 'react';
import { AgGridReact } from 'ag-grid-react';
import CustomCellRenderer from './CustomCellRenderer';
import HeatmapCellRenderer from './HeatmapCellRenderer';
import { Button } from '@mui/material';

const IPReviews = () => {
  const [allCellsData, setAllCellsData] = useState([
    { id: 1, data: [{ value: 'Initial value 1' }, { value: 'Initial value 2' }] },
    { id: 2, data: [{ value: 'Initial value 3' }, { value: 'Initial value 4' }] }
  ]);
  const [isHeatmap, setIsHeatmap] = useState(false);

  const handleUpdateData = (rowIndex, newData) => {
    setAllCellsData(prevData => {
      const updatedData = [...prevData];
      updatedData[rowIndex].data = newData;
      return updatedData;
    });
  };

  const handleDeleteData = (rowIndex, item) => {
    setAllCellsData(prevData => {
      const updatedData = [...prevData];
      updatedData[rowIndex].data = updatedData[rowIndex].data.filter(d => d.value !== item.value);
      return updatedData;
    });
  };

  const columnDefs = [
    {
      headerName: 'Custom Cell',
      field: 'data',
      cellRenderer: isHeatmap ? 'heatmapCellRenderer' : 'customCellRenderer',
      cellRendererParams: {
        handleUpdateData: handleUpdateData,
        handleDeleteData: handleDeleteData
      }
    }
  ];

  const handleButtonClick = (isHeatmapSelected) => {
    setIsHeatmap(isHeatmapSelected);
  };

  return (
    <div>
      <div style={{ marginBottom: 10 }}>
        <Button 
          variant="contained" 
          color={!isHeatmap ? "primary" : "default"} 
          onClick={() => handleButtonClick(false)} 
          disabled={!isHeatmap}
        >
          Default View
        </Button>
        <Button 
          variant="contained" 
          color={isHeatmap ? "primary" : "default"} 
          onClick={() => handleButtonClick(true)} 
          disabled={isHeatmap}
          style={{ marginLeft: 10 }}
        >
          Heatmap View
        </Button>
      </div>
      <div className="ag-theme-alpine" style={{ height: 400, width: 600 }}>
        <AgGridReact
          rowData={allCellsData}
          columnDefs={columnDefs}
          frameworkComponents={{
            customCellRenderer: CustomCellRenderer,
            heatmapCellRenderer: HeatmapCellRenderer
          }}
        />
      </div>
    </div>
  );
};

export default IPReviews;
